library(ggthemes)
start = strptime("2/1/2020", format = "%m/%d/%Y")
#customColors = c("#003f5c", "#374c80", "#7a5195", "#bc5090", "#ef5675", "#ff764a", "#ffa600")
epidemiology <- read.csv("./epidemiology_EU.csv")
epidemiology$Day <- as.numeric(difftime(strptime(epidemiology$date, format = "%m/%d/%Y"),start,units="days"))
data <- epidemiology[-c(1,5:6,9:10) ]
data %>%
ggplot(aes(x=Day, y=total_confirmed, color=key)) +
geom_point(alpha = 0.7, stroke = 0) +
theme_fivethirtyeight() +
labs(title = "Infection vs Death",
x = "Days passed",
y = "Total Infection",
color = "Country",
caption = "Source: Google Open Data") +
theme(axis.title = element_text()) +
scale_color_brewer(palette = "Set2")+
stat_summary(fun.data= mean_cl_normal) +
geom_smooth()
library(ggplot2)
library(dplyr)
library(ggthemes)
start = strptime("2/1/2020", format = "%m/%d/%Y")
#customColors = c("#003f5c", "#374c80", "#7a5195", "#bc5090", "#ef5675", "#ff764a", "#ffa600")
epidemiology <- read.csv("./epidemiology_EU.csv")
epidemiology$Day <- as.numeric(difftime(strptime(epidemiology$date, format = "%m/%d/%Y"),start,units="days"))
data <- epidemiology[-c(1,5:6,9:10) ]
data %>%
ggplot(aes(x=Day, y=total_confirmed, color=key)) +
geom_point(alpha = 0.7, stroke = 0) +
theme_fivethirtyeight() +
labs(title = "Infection vs Death",
x = "Days Passed",
y = "Total Infection",
color = "Country",
caption = "Source: Google Open Data") +
theme(axis.title = element_text()) +
scale_color_brewer(palette = "Set2")+
stat_summary(fun.data= mean_cl_normal) +
geom_smooth()
library(ggplot2)
library(dplyr)
library(ggthemes)
start = strptime("2/1/2020", format = "%m/%d/%Y")
#customColors = c("#003f5c", "#374c80", "#7a5195", "#bc5090", "#ef5675", "#ff764a", "#ffa600")
epidemiology <- read.csv("./epidemiology_EU.csv")
epidemiology$Day <- as.numeric(difftime(strptime(epidemiology$date, format = "%m/%d/%Y"),start,units="days"))
data <- epidemiology[-c(1,5:6,9:10) ]
data %>%
ggplot(aes(x=Day, y=total_confirmed, color=key)) +
geom_point(alpha = 0.7, stroke = 0) +
theme_fivethirtyeight() +
labs(title = "Infection Trends in Europe",
x = "Days Passed",
y = "Total Infection",
color = "Country",
caption = "Source: Google Open Data") +
theme(axis.title = element_text()) +
scale_color_brewer(palette = "Set2")+
stat_summary(fun.data= mean_cl_normal) +
geom_smooth()
library(ggplot2)
library(dplyr)
library(ggthemes)
start = strptime("2/1/2020", format = "%m/%d/%Y")
#customColors = c("#003f5c", "#374c80", "#7a5195", "#bc5090", "#ef5675", "#ff764a", "#ffa600")
epidemiology <- read.csv("./epidemiology_EU.csv")
epidemiology$Day <- as.numeric(difftime(strptime(epidemiology$date, format = "%m/%d/%Y"),start,units="days"))
data <- epidemiology[-c(1,5:6,9:10) ]
data %>%
ggplot(aes(x=Day, y=total_confirmed, color=key)) +
geom_point(alpha = 0.7, stroke = 0) +
theme_fivethirtyeight() +
labs(title = "Infection over Time in Europe",
x = "Days Passed",
y = "Total Infection",
color = "Country",
caption = "Source: Google Open Data") +
theme(axis.title = element_text()) +
scale_color_brewer(palette = "Set2")+
stat_summary(fun.data= mean_cl_normal) +
geom_smooth()
library(ggplot2)
library(dplyr)
library(ggthemes)
start = strptime("2/1/2020", format = "%m/%d/%Y")
target_key = "SE"
#customColors = c("#003f5c", "#374c80", "#7a5195", "#bc5090", "#ef5675", "#ff764a", "#ffa600")
epidemiology <- read.csv("./epidemiology_EU.csv")
epidemiology <- filter(epidemiology,key==target_key)
epidemiology$Day <- as.numeric(difftime(strptime(epidemiology$date, format = "%m/%d/%Y"),start,units="days"))
data <- epidemiology[-c(1:2,5:6,9:10) ]
data %>%
ggplot(aes(x=total_deceased, y=total_confirmed)) +
geom_point(alpha = 0.7, stroke = 0) +
theme_fivethirtyeight() +
labs(title = "Infection vs Death",
x = "Total Infection",
y = "Total Deaths",
color = "Country",
caption = "Source: Google Open Data") +
theme(axis.title = element_text()) +
scale_color_brewer(palette = "Set2")+
stat_summary(fun.data= mean_cl_normal) +
geom_smooth(color='red',method='lm')
summary(lm(data,formula=total_deceased ~ total_confirmed))
library(ggplot2)
library(dplyr)
library(ggthemes)
start = strptime("2/1/2020", format = "%m/%d/%Y")
target_key = "SE"
#customColors = c("#003f5c", "#374c80", "#7a5195", "#bc5090", "#ef5675", "#ff764a", "#ffa600")
epidemiology <- read.csv("./epidemiology_EU.csv")
epidemiology <- filter(epidemiology,key==target_key)
epidemiology$Day <- as.numeric(difftime(strptime(epidemiology$date, format = "%m/%d/%Y"),start,units="days"))
data <- epidemiology[-c(1:2,5:6,9:10) ]
data %>%
ggplot(aes(x=total_deceased, y=total_confirmed)) +
geom_point(alpha = 0.7, stroke = 0) +
theme_fivethirtyeight() +
labs(title = "Infection vs Death",
x = "Total Infection",
y = "Total Deaths",
color = "Country",
caption = "Source: Google Open Data") +
theme(axis.title = element_text()) +
scale_color_brewer(palette = "Set2")+
stat_summary(fun.data= mean_cl_normal) +
geom_smooth(color='red',method='glm')
summary(lm(data,formula=total_deceased ~ total_confirmed))
library(ggplot2)
library(dplyr)
library(ggthemes)
start = strptime("2/1/2020", format = "%m/%d/%Y")
target_key = "SE"
#customColors = c("#003f5c", "#374c80", "#7a5195", "#bc5090", "#ef5675", "#ff764a", "#ffa600")
epidemiology <- read.csv("./epidemiology_EU.csv")
epidemiology <- filter(epidemiology,key==target_key)
epidemiology$Day <- as.numeric(difftime(strptime(epidemiology$date, format = "%m/%d/%Y"),start,units="days"))
data <- epidemiology[-c(1:2,5:6,9:10) ]
data %>%
ggplot(aes(x=total_deceased, y=total_confirmed)) +
geom_point(alpha = 0.7, stroke = 0) +
theme_fivethirtyeight() +
labs(title = "Infection vs Death",
x = "Total Infection",
y = "Total Deaths",
color = "Country",
caption = "Source: Google Open Data") +
theme(axis.title = element_text()) +
scale_color_brewer(palette = "Set2")+
stat_summary(fun.data= mean_cl_normal) +
geom_smooth(color='red',method='glm')
summary(glm(data,formula=total_deceased ~ total_confirmed))
library(ggplot2)
library(dplyr)
library(ggthemes)
start = strptime("2/1/2020", format = "%m/%d/%Y")
target_key = "SE"
#customColors = c("#003f5c", "#374c80", "#7a5195", "#bc5090", "#ef5675", "#ff764a", "#ffa600")
epidemiology <- read.csv("./epidemiology_EU.csv")
epidemiology <- filter(epidemiology,key==target_key)
epidemiology$Day <- as.numeric(difftime(strptime(epidemiology$date, format = "%m/%d/%Y"),start,units="days"))
data <- epidemiology[-c(1:2,5:6,9:10) ]
data %>%
ggplot(aes(x=total_deceased, y=total_confirmed)) +
geom_point(alpha = 0.7, stroke = 0) +
theme_fivethirtyeight() +
labs(title = "Infection vs Death",
x = "Total Infection",
y = "Total Deaths",
color = "Country",
caption = "Source: Google Open Data") +
theme(axis.title = element_text()) +
scale_color_brewer(palette = "Set2")+
stat_summary(fun.data= mean_cl_normal) +
geom_smooth(color='red',method='glm')
summary(glm(data,formula=total_deceased ~ total_confirmed))
library(ggplot2)
library(dplyr)
library(ggthemes)
start = strptime("2/1/2020", format = "%m/%d/%Y")
target_key = "SE"
#customColors = c("#003f5c", "#374c80", "#7a5195", "#bc5090", "#ef5675", "#ff764a", "#ffa600")
epidemiology <- read.csv("./epidemiology_EU.csv")
epidemiology <- filter(epidemiology,key==target_key)
epidemiology$Day <- as.numeric(difftime(strptime(epidemiology$date, format = "%m/%d/%Y"),start,units="days"))
data <- epidemiology[-c(1:2,5:6,9:10) ]
data %>%
ggplot(aes(x=total_deceased, y=total_confirmed)) +
geom_point(alpha = 0.7, stroke = 0) +
theme_fivethirtyeight() +
labs(title = "Infection vs Death",
x = "Total Infection",
y = "Total Deaths",
color = "Country",
caption = "Source: Google Open Data") +
theme(axis.title = element_text()) +
scale_color_brewer(palette = "Set2")+
geom_smooth(color='red',method='glm')
summary(glm(data,formula=total_deceased ~ total_confirmed))
library(ggplot2)
library(dplyr)
library(ggthemes)
start = strptime("2/1/2020", format = "%m/%d/%Y")
target_key = "GB"
#customColors = c("#003f5c", "#374c80", "#7a5195", "#bc5090", "#ef5675", "#ff764a", "#ffa600")
epidemiology <- read.csv("./epidemiology_EU.csv")
epidemiology <- filter(epidemiology,key==target_key)
epidemiology$Day <- as.numeric(difftime(strptime(epidemiology$date, format = "%m/%d/%Y"),start,units="days"))
data <- epidemiology[-c(1:2,5:6,9:10) ]
data %>%
ggplot(aes(x=total_deceased, y=total_confirmed)) +
geom_point(alpha = 0.7, stroke = 0) +
theme_fivethirtyeight() +
labs(title = "Infection vs Death",
x = "Total Infection",
y = "Total Deaths",
color = "Country",
caption = "Source: Google Open Data") +
theme(axis.title = element_text()) +
scale_color_brewer(palette = "Set2")+
stat_summary(fun.data= mean_cl_normal) +
geom_smooth(color='red',method='glm')
summary(glm(data,formula=total_deceased ~ total_confirmed))
library(ggplot2)
library(dplyr)
library(ggthemes)
start = strptime("2/1/2020", format = "%m/%d/%Y")
target_key = "GB"
#customColors = c("#003f5c", "#374c80", "#7a5195", "#bc5090", "#ef5675", "#ff764a", "#ffa600")
epidemiology <- read.csv("./epidemiology_EU.csv")
epidemiology <- filter(epidemiology,key==target_key)
epidemiology$Day <- as.numeric(difftime(strptime(epidemiology$date, format = "%m/%d/%Y"),start,units="days"))
data <- epidemiology[-c(1:2,5:6,9:10) ]
data %>%
ggplot(aes(x=total_deceased, y=total_confirmed)) +
geom_point(alpha = 0.7, stroke = 0) +
theme_fivethirtyeight() +
labs(title = "Infection vs Death",
x = "Total Infection",
y = "Total Deaths",
color = "Country",
caption = "Source: Google Open Data") +
theme(axis.title = element_text()) +
scale_color_brewer(palette = "Set2")+
stat_summary(fun.data= mean_cl_normal) +
geom_smooth(color='red',method='lm')
summary(glm(data,formula=total_deceased ~ total_confirmed))
library(ggplot2)
library(dplyr)
library(ggthemes)
start = strptime("2/1/2020", format = "%m/%d/%Y")
#customColors = c("#003f5c", "#374c80", "#7a5195", "#bc5090", "#ef5675", "#ff764a", "#ffa600")
epidemiology <- read.csv("./epidemiology_EU.csv")
epidemiology$Day <- as.numeric(difftime(strptime(epidemiology$date, format = "%m/%d/%Y"),start,units="days"))
data <- epidemiology[-c(1,5:6,9:10) ]
data %>%
ggplot(aes(x=Day, y=total_confirmed, color=key)) +
geom_point(alpha = 0.7, stroke = 0) +
theme_fivethirtyeight() +
labs(title = "Infection over Time in Europe",
x = "Days Passed",
y = "Total Infection",
color = "Country",
caption = "Source: Google Open Data") +
theme(axis.title = element_text()) +
scale_color_brewer(palette = "Set2")+
stat_summary(fun.data= mean_cl_normal) +
geom_smooth()
#install.packages("gganimate")
#install.packages("gifski")
library(gganimate)
library(ggplot2)
library(dplyr)
library(gapminder)
library(ggthemes)
epidemiology <- read.csv("C:/Users/Omid/Desktop/Lnu/4DV651/Project/MDSE-Covid-Analysis/covid19/epidemiology_EU.csv")
epidemiology$DateS <- as.Date(epidemiology$date, "%m/%d/%Y")
epidemiology$Elapsed <- as.numeric(epidemiology$DateS)
# Graph 1: Transitioning through time
graph1 = epidemiology %>%
ggplot(aes(x=new_confirmed, y=new_deceased, color=key, size=total_confirmed)) +
geom_point(alpha = 0.7, stroke = 0) +
theme_fivethirtyeight() +
scale_size(range=c(2,12), guide="none") +
scale_x_log() +
labs(title = "Infection vs Death by Country",
x = "New Cases",
y = "New Deaths",
color = "Country",
caption = "Source: Google Open Data") +
theme(axis.title = element_text(),
text = element_text(family = "Rubik"),
legend.text=element_text(size=10)) +
scale_color_brewer(palette = "Set2")
graph1.animation = graph1 +
transition_time(DateS)+
labs(subtitle = "Date: {frame_time}") +
shadow_wake(wake_length = 0.1)
graph1.animation
animate(graph1.animation, height = 500, width = 800, fps = 30, duration = 20,
end_pause = 60, res = 100)
anim_save("gapminder graph.gif")
#install.packages("gganimate")
#install.packages("gifski")
library(gganimate)
library(ggplot2)
library(dplyr)
library(gapminder)
library(ggthemes)
epidemiology <- read.csv("./epidemiology_EU.csv")
epidemiology$DateS <- as.Date(epidemiology$date, "%m/%d/%Y")
epidemiology$Elapsed <- as.numeric(epidemiology$DateS)
# Graph 1: Transitioning through time
graph1 = epidemiology %>%
ggplot(aes(x=new_confirmed, y=new_deceased, color=key, size=total_confirmed)) +
geom_point(alpha = 0.7, stroke = 0) +
theme_fivethirtyeight() +
scale_size(range=c(2,12), guide="none") +
scale_x_log() +
labs(title = "Infection vs Death by Country",
x = "New Cases",
y = "New Deaths",
color = "Country",
caption = "Source: Google Open Data") +
theme(axis.title = element_text(),
text = element_text(family = "Rubik"),
legend.text=element_text(size=10)) +
scale_color_brewer(palette = "Set2")
graph1.animation = graph1 +
transition_time(DateS)+
labs(subtitle = "Date: {frame_time}") +
shadow_wake(wake_length = 0.1)
graph1.animation
animate(graph1.animation, height = 500, width = 800, fps = 30, duration = 20,
end_pause = 60, res = 100)
anim_save("gapminder graph.gif")
epidemiology <- read.csv("./epidemiology_EU.csv")
epidemiology$DateS <- as.Date(epidemiology$date, "%m/%d/%Y")
epidemiology$Elapsed <- as.numeric(epidemiology$DateS)
# Graph 1: Transitioning through time
graph1 = epidemiology %>%
ggplot(aes(x=new_confirmed, y=new_deceased, color=key, size=total_confirmed)) +
geom_point(alpha = 0.7, stroke = 0) +
theme_fivethirtyeight() +
scale_size(range=c(2,12), guide="none") +
scale_x_log() +
labs(title = "Infection vs Death by Country",
x = "New Cases",
y = "New Deaths",
color = "Country",
caption = "Source: Google Open Data") +
theme(axis.title = element_text(),
text = element_text(family = "Rubik"),
legend.text=element_text(size=10)) +
scale_color_brewer(palette = "Set2")
# Graph 1: Transitioning through time
graph1 = epidemiology %>%
ggplot(aes(x=new_confirmed, y=new_deceased, color=key, size=total_confirmed)) +
geom_point(alpha = 0.7, stroke = 0) +
theme_fivethirtyeight() +
scale_size(range=c(2,12), guide="none") +
scale_x_loge() +
labs(title = "Infection vs Death by Country",
x = "New Cases",
y = "New Deaths",
color = "Country",
caption = "Source: Google Open Data") +
theme(axis.title = element_text(),
text = element_text(family = "Rubik"),
legend.text=element_text(size=10)) +
scale_color_brewer(palette = "Set2")
#install.packages("gganimate")
#install.packages("gifski")
library(gganimate)
library(ggplot2)
library(dplyr)
library(gapminder)
library(ggthemes)
epidemiology <- read.csv("./epidemiology_EU.csv")
epidemiology$DateS <- as.Date(epidemiology$date, "%m/%d/%Y")
epidemiology$Elapsed <- as.numeric(epidemiology$DateS)
# Graph 1: Transitioning through time
graph1 = epidemiology %>%
ggplot(aes(x=new_confirmed, y=new_deceased, color=key, size=total_confirmed)) +
geom_point(alpha = 0.7, stroke = 0) +
theme_fivethirtyeight() +
scale_x_log10() +
labs(title = "Infection vs Death by Country",
x = "New Cases",
y = "New Deaths",
color = "Country",
caption = "Source: Google Open Data") +
theme(axis.title = element_text(),
text = element_text(family = "Rubik"),
legend.text=element_text(size=10)) +
scale_color_brewer(palette = "Set2")
graph1.animation = graph1 +
transition_time(DateS)+
labs(subtitle = "Date: {frame_time}") +
shadow_wake(wake_length = 0.1)
graph1.animation
animate(graph1.animation, height = 500, width = 800, fps = 30, duration = 20,
end_pause = 60, res = 100)
anim_save("gapminder graph.gif")
summary(lm(data,formula=total_deceased ~ total_confirmed))
library(ggplot2)
library(dplyr)
library(ggthemes)
start = strptime("2/1/2020", format = "%m/%d/%Y")
target_key = "SE"
#customColors = c("#003f5c", "#374c80", "#7a5195", "#bc5090", "#ef5675", "#ff764a", "#ffa600")
epidemiology <- read.csv("./epidemiology_EU.csv")
epidemiology <- filter(epidemiology,key==target_key)
epidemiology$Day <- as.numeric(difftime(strptime(epidemiology$date, format = "%m/%d/%Y"),start,units="days"))
data <- epidemiology[-c(1:2,5:6,9:10) ]
data %>%
ggplot(aes(x=total_deceased, y=total_confirmed)) +
geom_point(alpha = 0.7, stroke = 0) +
theme_fivethirtyeight() +
labs(title = "Infection vs Death",
x = "Total Infection",
y = "Total Deaths",
color = "Country",
caption = "Source: Google Open Data") +
theme(axis.title = element_text()) +
scale_color_brewer(palette = "Set2")+
stat_summary(fun.data= mean_cl_normal)
library(ggplot2)
library(dplyr)
library(ggthemes)
start = strptime("2/1/2020", format = "%m/%d/%Y")
target_key = "SE"
#customColors = c("#003f5c", "#374c80", "#7a5195", "#bc5090", "#ef5675", "#ff764a", "#ffa600")
epidemiology <- read.csv("./epidemiology_EU.csv")
epidemiology <- filter(epidemiology,key==target_key)
epidemiology$Day <- as.numeric(difftime(strptime(epidemiology$date, format = "%m/%d/%Y"),start,units="days"))
data <- epidemiology[-c(1:2,5:6,9:10) ]
data %>%
ggplot(aes(x=total_deceased, y=total_confirmed)) +
geom_point(alpha = 0.7, stroke = 0) +
theme_fivethirtyeight() +
labs(title = "Infection vs Death",
x = "Total Infection",
y = "Total Deaths",
color = "Country",
caption = "Source: Google Open Data") +
theme(axis.title = element_text()) +
scale_color_brewer(palette = "Set2")+
stat_summary(fun.data= mean_cl_normal) +
geom_smooth(color='red',method='lm')
summary(lm(data,formula=total_deceased ~ total_confirmed))
library(ggplot2)
library(dplyr)
library(ggthemes)
#customColors = c("#003f5c", "#374c80", "#7a5195", "#bc5090", "#ef5675", "#ff764a", "#ffa600")
epidemiology <- read.csv("C:/Users/Omid/Desktop/Lnu/4DV651/Project/MDSE-Covid-Analysis/covid19/epidemiology_EU.csv")
epidemiology$DateS <- as.Date(epidemiology$date, "%m/%d/%Y")
epidemiology %>%
ggplot(aes(x = DateS, y = new_confirmed, color= key)) +
geom_line(size = 1.2, alpha = 1.8) +
labs(title = "COVID-19 New Cases in Europe",
subtitle = "Spain, United Kingdm, Italy, Sweden, Netherlands, Germany",
x = "Date",
y = "New Cases",
color = "Country") +
theme_fivethirtyeight() +
#scale_color_manual(values = customColors)+
theme(axis.title = element_text())
library(ggplot2)
library(dplyr)
library(ggthemes)
#customColors = c("#003f5c", "#374c80", "#7a5195", "#bc5090", "#ef5675", "#ff764a", "#ffa600")
epidemiology <- read.csv("./epidemiology_EU.csv")
epidemiology$DateS <- as.Date(epidemiology$date, "%m/%d/%Y")
epidemiology %>%
ggplot(aes(x = DateS, y = new_confirmed, color= key)) +
geom_line(size = 1.2, alpha = 1.8) +
labs(title = "COVID-19 New Cases in Europe",
subtitle = "Spain, United Kingdm, Italy, Sweden, Netherlands, Germany",
x = "Date",
y = "New Cases",
color = "Country") +
theme_fivethirtyeight() +
#scale_color_manual(values = customColors)+
theme(axis.title = element_text())
summary(lm(data,formula=total_deceased ~ total_confirmed))
library(ggplot2)
library(dplyr)
library(ggthemes)
start = strptime("2/1/2020", format = "%m/%d/%Y")
target_key = "SE"
#customColors = c("#003f5c", "#374c80", "#7a5195", "#bc5090", "#ef5675", "#ff764a", "#ffa600")
epidemiology <- read.csv("./epidemiology_EU.csv")
epidemiology <- filter(epidemiology,key==target_key)
epidemiology$Day <- as.numeric(difftime(strptime(epidemiology$date, format = "%m/%d/%Y"),start,units="days"))
data <- epidemiology[-c(1:2,5:6,9:10) ]
data %>%
ggplot(aes(x=total_deceased, y=total_confirmed)) +
geom_point(alpha = 0.7, stroke = 0) +
theme_fivethirtyeight() +
labs(title = "Infection vs Death",
x = "Total Infection",
y = "Total Deaths",
color = "Country",
caption = "Source: Google Open Data") +
theme(axis.title = element_text()) +
scale_color_brewer(palette = "Set2")+
stat_summary(fun.data= mean_cl_normal) +
geom_smooth(color='red',method='lm')
summary(lm(data,formula=total_deceased ~ total_confirmed))
