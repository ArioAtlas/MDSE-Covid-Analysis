geom_smooth(color='red',method='lm')
summary(lm(data,formula=total_deceased ~ total_confirmed))
library(ggplot2)
library(dplyr)
library(ggthemes)
start = strptime("2/1/2020", format = "%m/%d/%Y")
#customColors = c("#003f5c", "#374c80", "#7a5195", "#bc5090", "#ef5675", "#ff764a", "#ffa600")
epidemiology <- read.csv("./epidemiology_EU.csv")
epidemiology$Day <- as.numeric(difftime(strptime(epidemiology$date, format = "%m/%d/%Y"),start,units="days"))
data <- epidemiology[-c(1,5:6,9:10) ]
data %>%
ggplot(aes(x=Day, y=total_confirmed, color=key)) +
geom_point(alpha = 0.7, stroke = 0) +
theme_fivethirtyeight() +
labs(title = "Infection over Time in Europe",
x = "Days Passed",
y = "Total Infection",
color = "Country",
caption = "Source: Google Open Data") +
theme(axis.title = element_text()) +
scale_color_brewer(palette = "Set2")+
stat_summary(fun.data= mean_cl_normal) +
geom_smooth()
#install.packages("gganimate")
#install.packages("gifski")
library(gganimate)
library(ggplot2)
library(dplyr)
library(gapminder)
library(ggthemes)
options(max.print = 100000)
epidemiology <- read.csv("./epidemiology_EU.csv")
epidemiology$DateS <- as.Date(epidemiology$date, "%m/%d/%Y")
# Graph 1: Transitioning through time
graph1 = epidemiology %>%
ggplot(aes(x=total_confirmed, y=total_deceased, color=key, size=new_confirmed)) +
geom_point(alpha = 0.7, stroke = 0) +
theme_fivethirtyeight() +
scale_size(range=c(0,20), guide="none") +
scale_x_log10() +
labs(title = "Infection vs Death by Country",
x = "Total Infection",
y = "Total Deaths",
color = "Country",
caption = "Source: Google Open Data") +
theme(axis.title = element_text(),
text = element_text(family = "Rubik"),
legend.text=element_text(size=10)) +
scale_color_brewer(palette = "Set2")
graph1.animation = graph1 +
transition_time(DateS)+
labs(subtitle = "Date: {frame_time}") +
shadow_wake(wake_length = 0.01)
animate(graph1.animation, height = 500, width = 800, fps = 30, duration = 20,
end_pause = 60, res = 100)
anim_save("gapminder graph.gif")
#install.packages("gganimate")
#install.packages("gifski")
library(gganimate)
library(ggplot2)
library(dplyr)
library(gapminder)
library(ggthemes)
options(max.print = 100000)
epidemiology <- read.csv("./epidemiology_EU.csv")
epidemiology$DateS <- as.Date(epidemiology$date, "%m/%d/%Y")
# Graph 1: Transitioning through time
graph1 = epidemiology %>%
ggplot(aes(x=total_confirmed, y=total_deceased, color=key, size=new_confirmed)) +
geom_point(alpha = 0.7, stroke = 0) +
theme_fivethirtyeight() +
scale_size(range=c(0,20), guide="none") +
scale_x_log10() +
labs(title = "Infection vs Death by Country",
x = "Total Infection",
y = "Total Deaths",
color = "Country",
caption = "Source: Google Open Data") +
theme(axis.title = element_text(),
text = element_text(family = "Rubik"),
legend.text=element_text(size=10)) +
scale_color_brewer(palette = "Set2")
graph1.animation = graph1 +
transition_time(DateS)+
labs(subtitle = "Date: {frame_time}") +
shadow_wake(wake_length = 0.01)
animate(graph1.animation, height = 500, width = 800, fps = 30, duration = 10,
end_pause = 60, res = 100)
anim_save("gapminder graph.gif")
epidemiology <- read.csv("./epidemiology_EU.csv")
epidemiology$Day <- as.numeric(difftime(strptime(epidemiology$date, format = "%m/%d/%Y"),start,units="days"))
epidemiology <- read.csv("./epidemiology_EU.csv")
epidemiology$DateS <- as.Date(epidemiology$date, "%m/%d/%Y")
library(ggplot2)
library(dplyr)
library(ggthemes)
#customColors = c("#003f5c", "#374c80", "#7a5195", "#bc5090", "#ef5675", "#ff764a", "#ffa600")
epidemiology <- read.csv("./epidemiology_EU.csv")
epidemiology$DateS <- as.Date(epidemiology$date, "%m/%d/%Y")
plot0 = epidemiology %>%
ggplot(aes(x = DateS, y = new_confirmed, color= key)) +
geom_line(size = 1.2, alpha = 1.8) +
labs(title = "COVID-19 New Cases in Europe",
subtitle = "Spain, United Kingdm, Italy, Sweden, Netherlands, Germany",
x = "Date",
y = "New Cases",
color = "Country") +
theme_fivethirtyeight() +
#scale_color_manual(values = customColors)+
theme(axis.title = element_text())
ggsave("myplot.png",width = 10,height = 7.5)
library(ggplot2)
library(dplyr)
library(ggthemes)
#customColors = c("#003f5c", "#374c80", "#7a5195", "#bc5090", "#ef5675", "#ff764a", "#ffa600")
epidemiology <- read.csv("./epidemiology_EU.csv")
#epidemiology$DateS <- as.Date(epidemiology$date, "%m/%d/%Y")
plot0 = epidemiology %>%
ggplot(aes(x = DateS, y = new_confirmed, color= key)) +
geom_line(size = 1.2, alpha = 1.8) +
labs(title = "COVID-19 New Cases in Europe",
subtitle = "Spain, United Kingdm, Italy, Sweden, Netherlands, Germany",
x = "Date",
y = "New Cases",
color = "Country") +
theme_fivethirtyeight() +
#scale_color_manual(values = customColors)+
theme(axis.title = element_text())
ggsave("myplot.png",width = 10,height = 7.5)
library(ggplot2)
library(dplyr)
library(ggthemes)
#customColors = c("#003f5c", "#374c80", "#7a5195", "#bc5090", "#ef5675", "#ff764a", "#ffa600")
epidemiology <- read.csv("./epidemiology_EU.csv")
#epidemiology$DateS <- as.Date(epidemiology$date, "%m/%d/%Y")
plot0 = epidemiology %>%
ggplot(aes(x = date, y = new_confirmed, color= key)) +
geom_line(size = 1.2, alpha = 1.8) +
labs(title = "COVID-19 New Cases in Europe",
subtitle = "Spain, United Kingdm, Italy, Sweden, Netherlands, Germany",
x = "Date",
y = "New Cases",
color = "Country") +
theme_fivethirtyeight() +
#scale_color_manual(values = customColors)+
theme(axis.title = element_text())
ggsave("myplot.png",width = 10,height = 7.5)
library(ggplot2)
library(dplyr)
library(ggthemes)
#customColors = c("#003f5c", "#374c80", "#7a5195", "#bc5090", "#ef5675", "#ff764a", "#ffa600")
epidemiology <- read.csv("./epidemiology_EU.csv")
epidemiology$DateS <- as.Date(epidemiology$date, "%m/%d/%Y")
plot0 = epidemiology %>%
ggplot(aes(x = DateS, y = new_confirmed, color= key)) +
geom_line(size = 1.2, alpha = 1.8) +
labs(title = "COVID-19 New Cases in Europe",
subtitle = "Spain, United Kingdm, Italy, Sweden, Netherlands, Germany",
x = "Date",
y = "New Cases",
color = "Country") +
theme_fivethirtyeight() +
#scale_color_manual(values = customColors)+
theme(axis.title = element_text())
ggsave("myplot.png",width = 10,height = 7.5)
library(ggplot2)
library(dplyr)
library(ggthemes)
#customColors = c("#003f5c", "#374c80", "#7a5195", "#bc5090", "#ef5675", "#ff764a", "#ffa600")
epidemiology <- read.csv("./epidemiology_EU.csv")
epidemiology$date <- as.Date(epidemiology$date, "%m/%d/%Y")
plot0 = epidemiology %>%
ggplot(aes(x = date, y = new_confirmed, color= key)) +
geom_line(size = 1.2, alpha = 1.8) +
labs(title = "COVID-19 New Cases in Europe",
subtitle = "Spain, United Kingdm, Italy, Sweden, Netherlands, Germany",
x = "Date",
y = "New Cases",
color = "Country") +
theme_fivethirtyeight() +
#scale_color_manual(values = customColors)+
theme(axis.title = element_text())
ggsave("myplot.png",width = 10,height = 7.5)
library(ggplot2)
library(dplyr)
library(ggthemes)
#customColors = c("#003f5c", "#374c80", "#7a5195", "#bc5090", "#ef5675", "#ff764a", "#ffa600")
epidemiology <- read.csv("./epidemiology_EU.csv")
epidemiology$date <- as.Date(epidemiology$date, "%m/%d/%Y")
plot0 = epidemiology %>%
ggplot(aes(x = date, y = new_confirmed, color= key)) +
geom_line(size = 1.2, alpha = 1.8) +
labs(title = "COVID-19 New Cases in Europe",
subtitle = "Spain, United Kingdm, Italy, Sweden, Netherlands, Germany",
x = "Date",
y = "New Cases",
color = "Country") +
theme_fivethirtyeight() +
#scale_color_manual(values = customColors)+
theme(axis.title = element_text())
ggsave("myplot.png",width = 10,height = 7.5)
epidemiology$date <- as.Date(epidemiology$date, "%m/%d/%Y")
epidemiology$Elapsed <- as.numeric(epidemiology$DateS)
epidemiology$Elapsed <- as.numeric(epidemiology$date)
epidemiology$Day <- as.numeric(difftime(strptime(epidemiology$date, format = "%m/%d/%Y"),start,units="days"))
epidemiology
epidemiology$date
epidemiology$date[0]
epidemiology$date[1]
epidemiology$Day <- as.numeric(difftime(strptime(epidemiology$date, format = "%m/%d/%Y"),epidemiology$date[1],units="days"))
epidemiology$Day <- as.numeric(difftime(strptime(epidemiology$date, format = "%m/%d/%Y"),epidemiology$date[1],units="days"))
epidemiology$Day <- as.numeric(difftime(strptime(epidemiology$date, format = "%m/%d/%Y"),epidemiology$date[1],units="week"))
epidemiology$Day <- as.numeric(difftime(strptime(epidemiology$date, format = "%m/%d/%Y"),epidemiology$date[1],units="month"))
epidemiology$Day <- as.numeric(difftime(strptime(epidemiology$date, format = "%m/%d/%Y"),epidemiology$date[1],units="year"))
epidemiology$Day <- as.numeric(difftime(strptime(epidemiology$date, format = "%m/%d/%Y"),epidemiology$date[1],units="days"))
epidemiology$Day <- as.numeric(difftime(strptime(epidemiology$date, format = "%m/%d/%Y"),epidemiology$date[1],units="week"))
epidemiology$Day <- as.numeric(difftime(strptime(epidemiology$date, format = "%m/%d/%Y"),epidemiology$date[1],units="hours"))
epidemiology$Day <- as.numeric(difftime(strptime(epidemiology$date, format = "%m/%d/%Y"),epidemiology$date[1],units="mins"))
epidemiology$Day <- as.numeric(difftime(strptime(epidemiology$date, format = "%m/%d/%Y"),epidemiology$date[1],units="secs"))
epidemiology$a <- as.numeric(difftime(strptime(epidemiology$date, format = "%m/%d/%Y"),epidemiology$date[1],units="days"))
epidemiology$b <- as.numeric(difftime(strptime(epidemiology$date, format = "%m/%d/%Y"),epidemiology$date[1],units="week"))
epidemiology$c <- as.numeric(difftime(strptime(epidemiology$date, format = "%m/%d/%Y"),epidemiology$date[1],units="hours"))
epidemiology$d <- as.numeric(difftime(strptime(epidemiology$date, format = "%m/%d/%Y"),epidemiology$date[1],units="mins"))
epidemiology$e <- as.numeric(difftime(strptime(epidemiology$date, format = "%m/%d/%Y"),epidemiology$date[1],units="secs"))
epidemiology <- read.csv("./epidemiology_EU.csv")
epidemiology$a <- as.numeric(difftime(strptime(epidemiology$date, format = "%m/%d/%Y"),epidemiology$date[1],units="days"))
epidemiology$b <- as.numeric(difftime(strptime(epidemiology$date, format = "%m/%d/%Y"),epidemiology$date[1],units="week"))
epidemiology$c <- as.numeric(difftime(strptime(epidemiology$date, format = "%m/%d/%Y"),epidemiology$date[1],units="hours"))
epidemiology$d <- as.numeric(difftime(strptime(epidemiology$date, format = "%m/%d/%Y"),epidemiology$date[1],units="mins"))
epidemiology$e <- as.numeric(difftime(strptime(epidemiology$date, format = "%m/%d/%Y"),epidemiology$date[1],units="secs"))
epidemiology$date <- as.Date(epidemiology$date, "%m/%d/%Y")
epidemiology <- read.csv("./epidemiology_EU.csv")
epidemiology$date <- as.Date(epidemiology$date, "%m/%d/%Y")
epidemiology$a <- as.numeric(difftime(strptime(epidemiology$date, format = "%m/%d/%Y"),epidemiology$date[1],units="days"))
epidemiology <- read.csv("./epidemiology_EU.csv")
epidemiology$date <- as.Date(epidemiology$date, "%m/%d/%Y")
epidemiology$a <- as.numeric(difftime(epidemiology$date,epidemiology$date[1],units="days"))
epidemiology$a <- as.numeric(difftime(epidemiology$date,epidemiology$date[1],units="days"))
epidemiology$a <- as.numeric(difftime(epidemiology$date,epidemiology$date[1],units="week"))
epidemiology$a <- as.numeric(difftime(epidemiology$date,epidemiology$date[1],units="hours"))
epidemiology$a <- as.numeric(difftime(epidemiology$date,epidemiology$date[1],units="mins"))
epidemiology$a <- as.numeric(difftime(epidemiology$date,epidemiology$date[1],units="secs"))
epidemiology$a <- as.numeric(difftime(epidemiology$date,epidemiology$date[1],units="days"))
epidemiology$b <- as.numeric(difftime(epidemiology$date,epidemiology$date[1],units="week"))
epidemiology$c <- as.numeric(difftime(epidemiology$date,epidemiology$date[1],units="hours"))
epidemiology$d <- as.numeric(difftime(epidemiology$date,epidemiology$date[1],units="mins"))
epidemiology$e <- as.numeric(difftime(epidemiology$date,epidemiology$date[1],units="secs"))
epidemiology$a%1 <- as.numeric(difftime(epidemiology$date,epidemiology$date[1],units="days"))
epidemiology$a-1 <- as.numeric(difftime(epidemiology$date,epidemiology$date[1],units="days"))
epidemiology$a@1 <- as.numeric(difftime(epidemiology$date,epidemiology$date[1],units="days"))
epidemiology$a&1 <- as.numeric(difftime(epidemiology$date,epidemiology$date[1],units="days"))
epidemiology$a_1 <- as.numeric(difftime(epidemiology$date,epidemiology$date[1],units="days"))
library(gganimate)
library(ggplot2)
library(dplyr)
library(gapminder)
library(ggthemes)
abc <- read.csv("./epidemiology_EU.csv")
abc$date <- as.Date(abc$date, "%m/%d/%Y")
abc$date_d <- as.numeric(difftime(abc$date,abc$date[1],units="days"))
abc$date_w <- as.numeric(difftime(abc$date,abc$date[1],units="week"))
abc$date_h <- as.numeric(difftime(abc$date,abc$date[1],units="hours"))
abc$date_m <- as.numeric(difftime(abc$date,abc$date[1],units="mins"))
abc$date_s <- as.numeric(difftime(abc$date,abc$date[1],units="secs"))
plot0 = abc %>%
ggplot(aes(x=total_deceased, y=total_deceased,color= total_deceased,size= total_deceased)) +
geom_point(alpha = 0.7, stroke = 0.0) +
theme_fivethirtyeight() +
scale_size(range=c(2,12), guide="none") +
scale_x_log10() +
labs(title = "Infection vs Death",
x = "Total Infection",
y = "Total Infection",
color = "Total Infection",
caption = "Source: Google Open Data") +
theme(axis.title = element_text(),
text = element_text(family = "Rubik"),
legend.text=element_text(size=10)) +
scale_color_brewer(palette = "Set2")+
geom_smooth()
plot0.animation = plot0 +
transition_time(date_d)+
labs(subtitle = "Date: : {frame_time}") +
shadow_wake(wake_length = 0.1)
graph1.animation
animate(plot0.animation, height = 500, width = 800, fps = 30, duration = 20,
end_pause = 60, res = 100)
anim_save("Infection vs Death_animatin.gif")
#install.packages("gganimate")
#install.packages("gifski")
library(gganimate)
library(ggplot2)
library(dplyr)
library(gapminder)
library(ggthemes)
options(max.print = 100000)
epidemiology <- read.csv("./epidemiology_EU.csv")
epidemiology$DateS <- as.Date(epidemiology$date, "%m/%d/%Y")
# Graph 1: Transitioning through time
graph1 = epidemiology %>%
ggplot(aes(x=total_confirmed, y=total_deceased, color=key, size=new_confirmed)) +
geom_point(alpha = 0.7, stroke = 0) +
theme_fivethirtyeight() +
scale_size(range=c(0,20), guide="none") +
scale_x_log10() +
labs(title = "Infection vs Death by Country",
x = "Total Infection",
y = "Total Deaths",
color = "Country",
caption = "Source: Google Open Data") +
theme(axis.title = element_text(),
text = element_text(family = "Rubik"),
legend.text=element_text(size=10)) +
scale_color_brewer(palette = "Set2")
graph1.animation = graph1 +
transition_time(DateS)+
labs(subtitle = "Date: {frame_time}") +
shadow_wake(wake_length = 0.01)
animate(graph1.animation, height = 500, width = 800, fps = 5, duration = 10,
end_pause = 60, res = 100)
anim_save("gapminder graph.gif")
#install.packages("gganimate")
#install.packages("gifski")
library(gganimate)
library(ggplot2)
library(dplyr)
library(gapminder)
library(ggthemes)
options(max.print = 100000)
epidemiology <- read.csv("./epidemiology_EU.csv")
epidemiology$DateS <- as.Date(epidemiology$date, "%m/%d/%Y")
# Graph 1: Transitioning through time
graph1 = epidemiology %>%
ggplot(aes(x=total_confirmed, y=total_deceased, color=key, size=new_confirmed)) +
geom_point(alpha = 0.7, stroke = 0) +
theme_fivethirtyeight() +
scale_size(range=c(0,20), guide="none") +
scale_x_log10() +
labs(title = "Infection vs Death by Country",
x = "Total Infection",
y = "Total Deaths",
color = "Country",
caption = "Source: Google Open Data") +
theme(axis.title = element_text(),
text = element_text(family = "Rubik"),
legend.text=element_text(size=10)) +
scale_color_brewer(palette = "Set2")
graph1.animation = graph1 +
transition_time(DateS)+
labs(subtitle = "Date: {frame_time}") +
shadow_wake(wake_length = 0.01)
animate(graph1.animation, height = 500, width = 800, fps = 10, duration = 10,
end_pause = 60, res = 100)
anim_save("gapminder graph.gif")
#install.packages("gganimate")
#install.packages("gifski")
library(gganimate)
library(ggplot2)
library(dplyr)
library(gapminder)
library(ggthemes)
options(max.print = 100000)
epidemiology <- read.csv("./epidemiology_EU.csv")
epidemiology$DateS <- as.Date(epidemiology$date, "%m/%d/%Y")
# Graph 1: Transitioning through time
graph1 = epidemiology %>%
ggplot(aes(x=total_confirmed, y=total_deceased, color=key, size=new_confirmed)) +
geom_point(alpha = 0.7, stroke = 0) +
theme_fivethirtyeight() +
scale_size(range=c(0,20), guide="none") +
scale_x_log10() +
labs(title = "Infection vs Death by Country",
x = "Total Infection",
y = "Total Deaths",
color = "Country",
caption = "Source: Google Open Data") +
theme(axis.title = element_text(),
text = element_text(family = "Rubik"),
legend.text=element_text(size=10)) +
scale_color_brewer(palette = "Set2")
graph1.animation = graph1 +
transition_time(DateS)+
labs(subtitle = "Date: {frame_time}") +
shadow_wake(wake_length = 0.01)
animate(graph1.animation, height = 500, width = 800, fps = 10, duration = 10,
end_pause = 60, res = 100)
anim_save("./gapminder graph.gif")
#install.packages("gganimate")
#install.packages("gifski")
library(gganimate)
library(ggplot2)
library(dplyr)
library(gapminder)
library(ggthemes)
epidemiology <- read.csv("epidemiology_EU.csv")
epidemiology$DateS <- as.Date(epidemiology$date, "%m/%d/%Y")
# Graph 1: Transitioning through time
graph1 = epidemiology %>%
ggplot(aes(x=total_confirmed, y=total_deceased, color=key, size=new_confirmed)) +
geom_point(alpha = 0.7, stroke = 0) +
theme_fivethirtyeight() +
scale_size(range=c(0,20), guide="none") +
scale_x_log10() +
labs(title = "Infection vs Death by Country",
x = "Total Infection",
y = "Total Deaths",
color = "Country",
caption = "Source: Google Open Data") +
theme(axis.title = element_text(),
text = element_text(family = "Rubik"),
legend.text=element_text(size=10)) +
scale_color_brewer(palette = "Set2")
graph1.animation = graph1 +
transition_time(DateS)+
labs(subtitle = "Date: {frame_time}") +
shadow_wake(wake_length = 0.01)
animate(graph1.animation, height = 500, width = 800, fps = 30, duration = 20,
end_pause = 60, res = 100)
anim_save("gapminder graph.gif")
#install.packages("gganimate")
#install.packages("gifski")
library(gganimate)
library(ggplot2)
library(dplyr)
library(gapminder)
library(ggthemes)
epidemiology <- read.csv("epidemiology_EU.csv")
epidemiology$DateS <- as.Date(epidemiology$date, "%m/%d/%Y")
# Graph 1: Transitioning through time
graph1 = epidemiology %>%
ggplot(aes(x=total_confirmed, y=total_deceased, color=key, size=new_confirmed)) +
geom_point(alpha = 0.7, stroke = 0) +
theme_fivethirtyeight() +
scale_size(range=c(0,20), guide="none") +
scale_x_log10() +
labs(title = "Infection vs Death by Country",
x = "Total Infection",
y = "Total Deaths",
color = "Country",
caption = "Source: Google Open Data") +
theme(axis.title = element_text(),
text = element_text(family = "Rubik"),
legend.text=element_text(size=10)) +
scale_color_brewer(palette = "Set2")
graph1.animation = graph1 +
transition_time(DateS)+
labs(subtitle = "Date: {frame_time}") +
shadow_wake(wake_length = 0.01)
animate(graph1.animation, height = 500, width = 800, fps = 10, duration = 10,
end_pause = 60, res = 100)
anim_save("gapminder graph.gif")
#install.packages("gganimate")
#install.packages("gifski")
library(gganimate)
library(ggplot2)
library(dplyr)
library(gapminder)
library(ggthemes)
epidemiology <- read.csv("epidemiology_EU.csv")
epidemiology$DateS <- as.Date(epidemiology$date, "%m/%d/%Y")
# Graph 1: Transitioning through time
graph1 = epidemiology %>%
ggplot(aes(x=total_confirmed, y=total_deceased, color=key, size=new_confirmed)) +
geom_point(alpha = 0.7, stroke = 0) +
theme_fivethirtyeight() +
scale_size(range=c(0,20), guide="none") +
scale_x_log10() +
labs(title = "Infection vs Death by Country",
x = "Total Infection",
y = "Total Deaths",
color = "Country",
caption = "Source: Google Open Data") +
theme(axis.title = element_text(),
text = element_text(family = "Rubik"),
legend.text=element_text(size=10)) +
scale_color_brewer(palette = "Set2")
graph1.animation = graph1 +
transition_time(DateS)+
labs(subtitle = "Date: {frame_time}") +
shadow_wake(wake_length = 0.01)
animate(graph1.animation, height = 500, width = 800, fps = 10, duration = 10,
end_pause = 60, res = 100,renderer=gifski_renderer("test.gif"))
#install.packages("gganimate")
#install.packages("gifski")
install.packages("gifski_renderer")
anim_save(filename="usanames.gif", animation=graph1.animation, './')
graph1 = epidemiology %>%
ggplot(aes(x=total_confirmed, y=total_deceased, color=key, size=new_confirmed)) +
geom_point(alpha = 0.7, stroke = 0) +
theme_fivethirtyeight() +
scale_size(range=c(0,20), guide="none") +
scale_x_log10() +
labs(title = "Infection vs Death by Country",
x = "Total Infection",
y = "Total Deaths",
color = "Country",
caption = "Source: Google Open Data") +
theme(axis.title = element_text(),
text = element_text(family = "Rubik"),
legend.text=element_text(size=10)) +
scale_color_brewer(palette = "Set2")
graph1.animation = graph1 +
transition_time(DateS)+
labs(subtitle = "Date: {frame_time}") +
shadow_wake(wake_length = 0.01)
animate(graph1.animation, height = 500, width = 800, fps = 10, duration = 10,
end_pause = 60, res = 100,renderer=gifski_renderer())
anim_save(filename="usanames.gif", animation=graph1.animation, './')
#install.packages("gganimate")
#install.packages("gifski")
install.packages("gifski")
install.packages("gifski")
